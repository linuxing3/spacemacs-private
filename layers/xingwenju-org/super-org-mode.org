#+TITLE: Org Mode - Organize Your Life In Plain Text!
#+LANGUAGE:  en
#+AUTHOR: xing wenju(IRC: linuxing3 on freenode)
#+EMAIL: xingwenju@gmail.com
#+OPTIONS:   H:3 num:t   toc:3 \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:nil
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+OPTIONS:   author:t creator:t timestamp:t email:t
#+DESCRIPTION: 我是怎样使用org-mode
#+KEYWORDS:  org-mode Emacs organization GTD getting-things-done git
#+INFOJS_OPT: view:nil toc:t ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport

* How To Use This Document
:PROPERTIES:
:CUSTOM_ID: HowToUseThisDocument
:END:
<2012-11-24 周六 23:28>

使用org-mode作为个人信息管理系统

从基本的 =TODO= and =DONE= 关键词到个人工作流，有很多体会和经验

The following setup in my .emacs enables =org-mode= for most buffers.
=org-mode= is the default mode for =.org=, =.org_archive=, and =.txt=
files.

#+header: :tangle yes
#+begin_src emacs-lisp :exports none
;; The following setting is different from the document so that you
;; can override the document path by setting your path in the variable
;; org-mode-user-lisp-path
(add-to-list 'auto-mode-alist '("\\.\\(org\\|org_archive\\|txt\\)$" . org-mode))
;;
#+end_src

That's all you need to get started using headlines and lists in org-mode.

The rest of this document describes customizations I use in my setup,
how I structure org-mode files, and other changes to fit the way I
want org-mode to work.
** Organizing Your Life Into Org Files
:PROPERTIES:
:CUSTOM_ID: OrgFiles
:END:

任务分解到逻辑组或方案中。使用不同文件进行任务分组和子目录进行方案组合。

- 以下是非工作任务文件

| Filename   | Description                                |
|------------+--------------------------------------------|
| work.org   | work tasks and things to keep track of |
| daniel.org | Tasks related to my son Daniel             |

- 以下是临时任务文件，用于抓取模版，快速生成

| Filename | Description         |
|----------+---------------------|
| gtd.org  | Capture task bucket |

- 以下是工作相关可用文件
 
| Filename      | Description            |
|---------------+------------------------|
| xingwenju.org | Personal tasks and notes |

** Agenda Setup
:PROPERTIES:
:CUSTOM_ID: AgendaSetup
:END:

Here is my current =org-agenda-files= setup.

#+header: :tangle yes
#+begin_src emacs-lisp :exports none
;; The following setting is different from the document so that you
;; can override the document org-agenda-files by setting your
;; org-agenda-files in the variable org-user-agenda-files
;;
(if (boundp 'org-user-agenda-files)
    (setq org-agenda-files org-user-agenda-files)
  (setq org-agenda-files (quote ("~/iCloudDrive/lifehacker/org"
                               "~/iCloudDrive/lifehacker/org/client1"
                               "~/iCloudDrive/lifehacker/client2"))))
(setq org-directory "~/iCloudDrive/lifehacker/org") (setq org-agenda-dir "~/iCloudDrive/lifehacker/org")
(setq org-agenda-file-gtd (expand-file-name "gtd.org" org-agenda-dir))
(setq org-agenda-file-note (expand-file-name "notes.org" org-agenda-dir))
(setq org-agenda-file-journal (expand-file-name "journal.org" org-agenda-dir))
(setq org-agenda-file-code-snippet (expand-file-name "snippet.org" org-agenda-dir))
(setq org-default-notes-file (expand-file-name "gtd.org" org-agenda-dir))
#+end_src

** Key bindings
:PROPERTIES:
:CUSTOM_ID: KeyBindings
:END:
:LOGBOOK:
CLOCK: [2017-10-27 Fri 00:42]--[2017-10-27 Fri 01:08] =>  0:26
:END:

I live in the agenda.  To make getting to the agenda faster I mapped
=F12= to the sequence =C-c a= since I'm using it hundreds of times a
day.

I have the following custom key bindings set up for my emacs (sorted by frequency).

| Key     | For                                             | Used       |
|---------+-------------------------------------------------+------------|
| F12     | Agenda (1 key less than C-c a)                  | Very Often |
| C-c b   | Switch to org file                              | Very Often |
| F11     | Goto currently clocked item                     | Very Often |
| C-c c   | Capture a task                                  | Very Often |
| C-F11   | Clock in a task (show menu with prefix)         | Often      |
| f9 g    | Gnus - I check mail regularly                   | Often      |
| f5      | Show todo items for this subtree                | Often      |
| S-f5    | Widen                                           | Often      |
| f9 b    | Quick access to bbdb data                       | Often      |
| f9 c    | Calendar access                                 | Often      |
| C-S-f12 | Save buffers and publish current project        | Often      |
| C-c l   | Store a link for retrieval with C-c C-l         | Often      |
| f8      | Go to next org file in org-agenda-files         | Sometimes  |
| f9 r    | Boxquote selected region                        | Sometimes  |
| f9 t    | Insert inactive timestamp                       | Sometimes  |
| f9 v    | Toggle visible mode (for showing/editing links) | Sometimes  |
| C-f9    | Previous buffer                                 | Sometimes  |
| C-f10   | Next buffer                                     | Sometimes  |
| C-x n r | Narrow to region                                | Sometimes  |
| f9 f    | Boxquote insert a file                          | Sometimes  |
| f9 i    | Info manual                                     | Sometimes  |
| f9 I    | Punch Clock In                                  | Sometimes  |
| f9 O    | Punch Clock Out                                 | Sometimes  |
| f9 o    | Switch to org scratch buffer                    | Sometimes  |
| f9 s    | Switch to scratch buffer                        | Sometimes  |
| f9 h    | Hide other tasks                                | Rare       |
| f7      | Toggle line truncation/wrap                     | Rare       |
| f9 T    | Toggle insert inactive timestamp                | Rare       |
| C-c a   | Enter Agenda (minimal emacs testing)            | Rare       |

Here is the keybinding setup in lisp:
#+name: super-keybinding
#+header: :tangle yes
#+begin_src emacs-lisp
;; Custom Key Bindings
(global-set-key (kbd "<f12>") 'org-agenda)

(global-set-key (kbd "<f5>") 'org-reveal-export-to-html)
(global-set-key (kbd "<f8>") 'org-cycle-agenda-files)

(global-set-key (kbd "<f9> <f9>") 'bh/show-org-agenda)
(global-set-key (kbd "<f9> b") 'bbdb)
(global-set-key (kbd "<f9> c") 'calendar)
(global-set-key (kbd "<f9> f") 'boxquote-insert-file)
(global-set-key (kbd "<f9> g") 'gnus)
(global-set-key (kbd "<f9> h") 'bh/hide-other)
(global-set-key (kbd "<f9> n") 'bh/toggle-next-task-display)

(global-set-key (kbd "<f9> I") 'bh/punch-in)
(global-set-key (kbd "<f9> O") 'bh/punch-out)

(global-set-key (kbd "<f9> o") 'bh/make-org-scratch)

(global-set-key (kbd "<f9> r") 'boxquote-region)
(global-set-key (kbd "<f9> s") 'bh/switch-to-scratch)

(global-set-key (kbd "<f9> t") 'bh/insert-inactive-timestamp)
(global-set-key (kbd "<f9> T") 'bh/toggle-insert-inactive-timestamp)

(global-set-key (kbd "<f9> v") 'visible-mode)
(global-set-key (kbd "<f9> l") 'org-toggle-link-display)
(global-set-key (kbd "<f9> SPC") 'bh/clock-in-last-task)

(global-set-key (kbd "C-<f9>") 'previous-buffer)
(global-set-key (kbd "C-<f10>") 'next-buffer)

(global-set-key (kbd "M-<f9>") 'org-toggle-inline-images)
(global-set-key (kbd "C-x n r") 'narrow-to-region)

(global-set-key (kbd "<f11>") 'org-clock-goto)
(global-set-key (kbd "C-<f11>") 'org-clock-in)
(global-set-key (kbd "C-s-<f12>") 'bh/save-then-publish)

(global-set-key (kbd "C-c c") 'org-capture)

#+end_src

#+RESULTS: super-keybinding
: org-capture

The main reason I have special key bindings (like =F11=, and =F12=) is
so that the keys work in any mode.  If I'm in the Gnus summary buffer
then =C-u C-c C-x C-i= doesn't work, but the =C-F11= key combination
does and this saves me time since I don't have to visit an org-mode
buffer first just to clock in a recent task.
* Tasks and States
:PROPERTIES:
:CUSTOM_ID: TasksAndStates
:END:

我使用TODO关键字。

设置dummy变量 =#+SEQ_TODO: FIXME FIXED=, 防止修改默认可用变量

** DONE 关键词keywords

我设置了色彩，在阳光下很好阅读。

#+header: :tangle yes
#+begin_src emacs-lisp
(setq org-todo-keywords
      (quote ((sequence "TODO(t)" "NEXT(n)" "|" "DONE(d)")
              (sequence "WAITING(w@/!)" "HOLD(h@/!)" "|" "CANCELLED(c@/!)" "PHONE" "MEETING"))))

(setq org-todo-keyword-faces
      (quote (("TODO" :foreground "red" :weight bold)
              ("NEXT" :foreground "blue" :weight bold)
              ("DONE" :foreground "forest green" :weight bold)
              ("WAITING" :foreground "orange" :weight bold)
              ("HOLD" :foreground "magenta" :weight bold)
              ("CANCELLED" :foreground "forest green" :weight bold)
              ("MEETING" :foreground "forest green" :weight bold)
              ("PHONE" :foreground "forest green" :weight bold))))
#+end_src
*** Task States
:PROPERTIES:
:CUSTOM_ID: TodoKeywordTaskStates
:END:

任务状态是亮点，从开始到完成。

状态切换是非常关键。每一个任务都是从不同的状态进行切换的。

#+begin_src plantuml :file normal_task_states.png :cache yes
title Task States
[*] -> TODO
TODO -> NEXT
TODO -> DONE
NEXT -> DONE
DONE -> [*]
TODO --> WAITING
WAITING --> TODO
NEXT --> WAITING
WAITING --> NEXT
HOLD --> CANCELLED
WAITING --> CANCELLED
CANCELLED --> [*]
TODO --> HOLD
HOLD --> TODO
TODO --> CANCELLED
TODO: t
NEXT: n
DONE: d
WAITING:w
note right of WAITING: Note records\nwhat it is waiting for
HOLD:h
note right of CANCELLED: Note records\nwhy it was cancelled
CANCELLED:c
WAITING --> DONE
#+end_src

#+results[61c867b8eb4f49bc47e44ec2b534ac3219d82594]:
[[file:normal_task_states.png]]

*** Project Task States
:PROPERTIES:
:CUSTOM_ID: TodoKeywordProjectTaskStates
:END:

项目或者称 =project=, 定义是很简单的，即有子任务的综合型任务，带有 =TODO= 关键字。

项目可以在任意大纲级别中设置，只需要创建一个带有 =TODO= 状态的新任务。项目使用 =NEXT= 代表没有搁置。 

*** Phone Calls
:PROPERTIES:
:CUSTOM_ID: TodoKeywordPhoneCalls
:END:

Telephone calls are special.  They are created in a done state by a capture task.
The time of the call is recorded for as long as the capture task is active.  If I need 
to look up other details and want to close the capture task early I can just 
=C-c C-c= to close the capture task (stopping the clock) and then =f9 SPC= to resume
the clock in the phone call while I do other things.
#+begin_src plantuml :file phone_states.png :cache yes
title Phone Call Task State
[*] -> PHONE
PHONE -> [*]
#+end_src

#+results[9e27f3a56c4fca8f05455e6dfa1282030ae52830]:
[[file:phone_states.png]]

*** Meetings
:PROPERTIES:
:CUSTOM_ID: TodoKeywordMeetings
:END:

Meetings are special.  They are created in a done state by a capture
task.  I use the MEETING capture template when someone interrupts what
I'm doing with a question or discussion.  This is handled similarly to
phone calls where I clock the amount of time spent with whomever it is
and record some notes of what was discussed (either during or after
the meeting) depending on content, length, and complexity of the
discussion.

The time of the meeting is recorded for as long as the capture task is
active.  If I need to look up other details and want to close the
capture task early I can just =C-c C-c= to close the capture task
(stopping the clock) and then =f9 SPC= to resume the clock in the
meeting task while I do other things.
#+begin_src plantuml :file meeting_states.png :cache yes
title Meeting Task State
[*] -> MEETING
MEETING -> [*]
#+end_src

#+results[942fb408787905ffcdde421ee02edabdbb921b06]:
[[file:meeting_states.png]]

** DONE 快速选择Fast Todo Selection
   CLOSED: [2017-10-27 Fri 01:50]
:PROPERTIES:
:CUSTOM_ID: FastTodoSelection
:END:

Fast todo selection allows changing from any task todo state to any
other state directly by selecting the appropriate key from the fast
todo selection key menu.  This is a great feature!

#+header: :tangle yes
#+begin_src emacs-lisp 
(setq org-use-fast-todo-selection t)
#+end_src

Changing a task state is done with =C-c C-t KEY=

where =KEY= is the appropriate fast todo state selection key as defined in =org-todo-keywords=.

The setting
#+header: :tangle yes
#+begin_src emacs-lisp
(setq org-treat-S-cursor-todo-selection-as-state-change nil)
#+end_src
allows changing todo states with S-left and S-right skipping all of
the normal processing when entering or leaving a todo state.  This
cycles through the todo states but skips setting timestamps and
entering notes which is very convenient when all you want to do is fix
up the status of an entry.
** DONE 触发状态state triggers
   CLOSED: [2017-10-27 Fri 01:50]
:PROPERTIES:
:CUSTOM_ID: ToDoStateTriggers
:END:

小贴士：通过设置状态，自动触发标签的更改。

状态改为 =CANCELLED= 就得到了 =CANCELLED= 标签。切换回去，就自动移除标签。

通过标签，可以在日历中方便地过滤你想要的事件和活动。

基本规则是这样的：

-  将状态切换到 =CANCELLED= adds a =CANCELLED= tag
-  将状态切换到 =WAITING= adds a =WAITING= tag
-  将状态切换到 =HOLD= adds =WAITING= and =HOLD= tags
-  将状态切换到  =WAITING= and =HOLD= tags
-  将状态切换到 =TODO= removes =WAITING=, =CANCELLED=, and =HOLD= tags
-  将状态切换到 =NEXT= removes =WAITING=, =CANCELLED=, and =HOLD= tags
-  将状态切换到 =DONE= removes =WAITING=, =CANCELLED=, and =HOLD= tags

#+header: :tangle yes
#+begin_src emacs-lisp 
(setq org-todo-state-tags-triggers
      (quote (("CANCELLED" ("CANCELLED" . t))
              ("WAITING" ("WAITING" . t))
              ("HOLD" ("WAITING") ("HOLD" . t))
              (done ("WAITING") ("HOLD"))
              ("TODO" ("WAITING") ("CANCELLED") ("HOLD"))
              ("NEXT" ("WAITING") ("CANCELLED") ("HOLD"))
              ("DONE" ("WAITING") ("CANCELLED") ("HOLD")))))
#+end_src
* DONE 快速抓取任务Org Capture
  CLOSED: [2017-10-27 Fri 01:50]
:PROPERTIES:
:CUSTOM_ID: Capture
:END:

使用最小的工作流，将主要任务通过模板设置到收件箱文件中，我将它命名为 =refile= 文件。

*** 这样的好处 [/]
- [] 抓取快
- [] 随时转存 
- [] 可以添加新可用文件，不用修改模板

** DONE 模板Capture Templates
   CLOSED: [2017-10-27 Fri 01:50]
:PROPERTIES:
:CUSTOM_ID: CaptureTemplates
:END:

添加新任务时，我根据其特性进行如下归类，然后选择相应模板。

- A phone call (p)
- A meeting (m)
- An email I need to respond to (r)
- A new task (t)
- A new note (n)
- An interruption (j)
- A new habit (h)

** DONE Template
#+header: :tangle yes
#+begin_src emacs-lisp
;; I use C-c c to start capture mode

(setq org-capture-templates
      '(
        ;; ==================================
        ("t" "待办Todo" entry (file+headline org-agenda-file-gtd "Inbox")
         "** TODO [#B] %?\t%^g\n  %i\n"
         :empty-lines 1)
        ;; ==================================
        ("w" "工作work" entry (file+headline org-agenda-file-gtd "Research and Development")
         "** TODO [#A] %?\n  %i\n %U"
         :empty-lines 1)
        ;; ==================================
        ("n" "笔记Notes" entry (file+headline org-agenda-file-note "Quick notes")
         "** %?\t%^g\n  %i\n %U"
         :empty-lines 1)
        ;; ==================================
	      ("L" "Protocol Link" entry (file+headline org-agenda-file-note "Inbox")
        "* %? [[%:link][%:description]] \nCaptured On: %U")
	      ("p" "Protocol" entry (file+headline org-agenda-file-note "Inbox")
        "* %^{Title}\nSource: %u, %c\n #+BEGIN_QUOTE\n%i\n#+END_QUOTE\n\n\n%?")
        ("c" "Chrome" entry (file+headline org-agenda-file-note "Quick notes")
        "** TODO [#C] %?\n %(xingwenju/retrieve-chrome-current-tab-url)\n %i\n %U"
        :empty-lines 1)
        ;; ==================================
  			("r" "回复Response" entry (file+headline org-agenda-file-gtd "Inbox")
	        "** TODO %?\t%^g\nSCHEDULED: %t\n%U\n%a\n" :clock-in t :clock-resume t)
        ("s" "代码片段Code Snippet" entry
         (file org-agenda-file-code-snippet)
         "* %?\t%^g\n#+BEGIN_SRC %^{language}\n\n#+END_SRC")
        ("l" "链接links" entry (file+headline org-agenda-file-note "Quick notes")
         "** TODO [#C] %?\%i\n %a \n %U"
         :empty-lines 1)
        ("j" "日志Journal"
         entry (file+olp+datetree org-agenda-file-journal)
         "* %?"
         :empty-lines 1)
        ;; End of Template 
))
#+end_src

** DONE Agenda custom commands
#+BEGIN_SRC emacs-lisp
(setq org-agenda-custom-commands
      '(
        ("w" . "任务安排")
        ("wa" "重要且紧急的任务" tags-todo "+PRIORITY=\"A\"")
        ("wb" "重要且不紧急的任务" tags-todo "-Weekly-Monthly-Daily+PRIORITY=\"B\"")
        ("wc" "不重要且紧急的任务" tags-todo "+PRIORITY=\"C\"")
        ("h" . "家务安排")
  ("ha" "重要且紧急的任务" tags-todo "home")
 ("ha" "重要且紧急的任务" tags-todo "home+PROJECT")
        ("b" "写作" tags "BLOG")
        ("p" . "项目安排")
        ("pw" tags-todo "dev")
        ("pl" tags-todo "dev+PROJECT")
 ("d" . "孩子安排")
 ("da" "重要且紧急的任务" tags-todo "home+kids+PRIORITY=\"A\"")
 ("da" "重要且紧急的任务" tags-todo "home+kids")
        ("W" "每周回顾"
         ((stuck "") ;; review stuck projects as designated by org-stuck-projects
          (tags "PROJECT") ;; review all projects (assuming you use todo keywords to designate projects)
          ))))
#+END_SRC
